/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  StakingContract,
  StakingContractInterface,
} from "../../contracts/StakingContract";

const _abi = [
  {
    inputs: [],
    name: "AmountCannotBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "RewardAmountGreaterThanBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "RewardDurationNotFinished",
    type: "error",
  },
  {
    inputs: [],
    name: "RewardRateCannotBeZero",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
    ],
    name: "changeRewardToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
    ],
    name: "changeStakingToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finishAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTimeRewardApplicable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "notifyRewardAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "setRewardsDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updatedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userRewardPerTokenPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5060805161236e61004c6000396000818161097e015281816109be01528181610e8901528181610ec90152610f58015261236e6000f3fe6080604052600436106102195760003560e01c806367d3b488116101235780638b876347116100ab578063cc1a378f1161006f578063cc1a378f14610615578063cd3daf9d14610635578063d547741f1461064a578063df136d651461066a578063f7c618c11461068157600080fd5b80638b876347146105715780638da5cb5b1461059f57806391d14854146105c0578063a217fddf146105e0578063a694fc3a146105f557600080fd5b806375b238fc116100f257806375b238fc146104f75780637b0a47ee1461051957806380faa57d14610530578063817b1cd2146105455780638456cb591461055c57600080fd5b806367d3b4881461046257806370a082311461047957806372f702f3146104a75780637519ab50146104e057600080fd5b806336568abe116101a65780633f4ba83a116101755780633f4ba83a146103ed578063485cc955146104025780634f1ef2861461042257806352d1902d146104355780635c975abb1461044a57600080fd5b806336568abe146103785780633659cfe6146103985780633c6b16ab146103b85780633d18b912146103d857600080fd5b80630fb5a6b4116101ed5780630fb5a6b4146102d1578063248a9ca3146102e8578063285d333b146103185780632e1a7d4d146103385780632f2ff15d1461035857600080fd5b80628cc2621461021e57806301ffc9a7146102515780630700037d14610281578063088ab8ce146102af575b600080fd5b34801561022a57600080fd5b5061023e610239366004611e84565b6106a2565b6040519081526020015b60405180910390f35b34801561025d57600080fd5b5061027161026c366004611e9f565b610722565b6040519015158152602001610248565b34801561028d57600080fd5b5061023e61029c366004611e84565b61016a6020526000908152604090205481565b3480156102bb57600080fd5b506102cf6102ca366004611e84565b610757565b005b3480156102dd57600080fd5b5061023e6101635481565b3480156102f457600080fd5b5061023e610303366004611ec9565b600090815260fb602052604090206001015490565b34801561032457600080fd5b506102cf610333366004611e84565b610793565b34801561034457600080fd5b506102cf610353366004611ec9565b6107cf565b34801561036457600080fd5b506102cf610373366004611ee2565b6108c7565b34801561038457600080fd5b506102cf610393366004611ee2565b6108f1565b3480156103a457600080fd5b506102cf6103b3366004611e84565b610974565b3480156103c457600080fd5b506102cf6103d3366004611ec9565b610a50565b3480156103e457600080fd5b506102cf610c09565b3480156103f957600080fd5b506102cf610ce8565b34801561040e57600080fd5b506102cf61041d366004611f0e565b610d08565b6102cf610430366004611f4e565b610e7f565b34801561044157600080fd5b5061023e610f4b565b34801561045657600080fd5b5060975460ff16610271565b34801561046e57600080fd5b5061023e6101645481565b34801561048557600080fd5b5061023e610494366004611e84565b6101686020526000908152604090205481565b3480156104b357600080fd5b5061015f546104c8906001600160a01b031681565b6040516001600160a01b039091168152602001610248565b3480156104ec57600080fd5b5061023e6101655481565b34801561050357600080fd5b5061023e60008051602061231983398151915281565b34801561052557600080fd5b5061023e6101665481565b34801561053c57600080fd5b5061023e610ffe565b34801561055157600080fd5b5061023e6101625481565b34801561056857600080fd5b506102cf611012565b34801561057d57600080fd5b5061023e61058c366004611e84565b6101696020526000908152604090205481565b3480156105ab57600080fd5b50610161546104c8906001600160a01b031681565b3480156105cc57600080fd5b506102716105db366004611ee2565b611032565b3480156105ec57600080fd5b5061023e600081565b34801561060157600080fd5b506102cf610610366004611ec9565b61105d565b34801561062157600080fd5b506102cf610630366004611ec9565b61118b565b34801561064157600080fd5b5061023e6111ce565b34801561065657600080fd5b506102cf610665366004611ee2565b611235565b34801561067657600080fd5b5061023e6101675481565b34801561068d57600080fd5b50610160546104c8906001600160a01b031681565b6001600160a01b038116600090815261016a6020908152604080832054610169909252822054670de0b6b3a7640000906106da6111ce565b6106e49190612026565b6001600160a01b03851660009081526101686020526040902054610708919061203d565b610712919061205c565b61071c919061207e565b92915050565b60006001600160e01b03198216637965db0b60e01b148061071c57506301ffc9a760e01b6001600160e01b031983161461071c565b60008051602061231983398151915261076f8161125a565b5061016080546001600160a01b0319166001600160a01b0392909216919091179055565b6000805160206123198339815191526107ab8161125a565b5061015f80546001600160a01b0319166001600160a01b0392909216919091179055565b6107d7611264565b6107df6112ac565b336107e86111ce565b610167556107f4610ffe565b610165556001600160a01b0381161561083f57610810816106a2565b6001600160a01b038216600090815261016a602090815260408083209390935561016754610169909152919020555b600082116108605760405163d11b25af60e01b815260040160405180910390fd5b336000908152610168602052604081208054849290610880908490612026565b9250508190555081610162600082825461089a9190612026565b9091555050610160546108b8906001600160a01b0316303385611307565b506108c4600161012d55565b50565b600082815260fb60205260409020600101546108e28161125a565b6108ec8383611380565b505050565b6001600160a01b03811633146109665760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6109708282611406565b5050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036109bc5760405162461bcd60e51b815260040161095d90612096565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610a056000805160206122d2833981519152546001600160a01b031690565b6001600160a01b031614610a2b5760405162461bcd60e51b815260040161095d906120e2565b610a348161146d565b604080516000808252602082019092526108c491839190611485565b600080516020612319833981519152610a688161125a565b6000610a726111ce565b61016755610a7e610ffe565b610165556001600160a01b03811615610ac957610a9a816106a2565b6001600160a01b038216600090815261016a602090815260408083209390935561016754610169909152919020555b61016454421115610aeb5761016354610ae2908461205c565b61016655610b2b565b60004261016454610afc9190612026565b61016654610b0a919061203d565b61016354909150610b1b858361207e565b610b25919061205c565b61016655505b60006101665411610b4f57604051637a69ed5160e11b815260040160405180910390fd5b610160546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610b98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbc919061212e565b6101635461016654610bce919061203d565b1115610bed576040516388b88e1160e01b815260040160405180910390fd5b61016354610bfb904261207e565b610164555050426101655550565b33610c126111ce565b61016755610c1e610ffe565b610165556001600160a01b03811615610c6957610c3a816106a2565b6001600160a01b038216600090815261016a602090815260408083209390935561016754610169909152919020555b33600090815261016a60205260409020548015610cab5733600081815261016a602052604081205561016054610cab916001600160a01b0390911690836115f0565b60408051338152602081018390527f8a43c4352486ec339f487f64af78ca5cbf06cd47833f073d3baf3a193e503161910160405180910390a15050565b600080516020612319833981519152610d008161125a565b6108c4611620565b600054610100900460ff1615808015610d285750600054600160ff909116105b80610d425750303b158015610d42575060005460ff166001145b610da55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161095d565b6000805460ff191660011790558015610dc8576000805461ff0019166101001790555b610dd0611672565b610dd8611699565b610de06116c8565b610deb600033611380565b610e0360008051602061231983398151915233611380565b61015f80546001600160a01b038086166001600160a01b03199283161790925561016080549285169290911691909117905580156108ec576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610ec75760405162461bcd60e51b815260040161095d90612096565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610f106000805160206122d2833981519152546001600160a01b031690565b6001600160a01b031614610f365760405162461bcd60e51b815260040161095d906120e2565b610f3f8261146d565b61097082826001611485565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610feb5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161095d565b506000805160206122d283398151915290565b600061100d42610164546116f7565b905090565b60008051602061231983398151915261102a8161125a565b6108c4611710565b600091825260fb602090815260408084206001600160a01b0393909316845291905290205460ff1690565b611065611264565b61106d6112ac565b336110766111ce565b61016755611082610ffe565b610165556001600160a01b038116156110cd5761109e816106a2565b6001600160a01b038216600090815261016a602090815260408083209390935561016754610169909152919020555b600082116110ee5760405163d11b25af60e01b815260040160405180910390fd5b61015f54611107906001600160a01b0316333085611307565b33600090815261016860205260408120805484929061112790849061207e565b92505081905550816101626000828254611141919061207e565b909155505060408051338152602081018490527f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d910160405180910390a1506108c4600161012d55565b6000805160206123198339815191526111a38161125a565b426101645411156111c75760405163715f384360e11b815260040160405180910390fd5b5061016355565b6000610162546000036111e357506101675490565b61016254610165546111f3610ffe565b6111fd9190612026565b6101665461120b919061203d565b61121d90670de0b6b3a764000061203d565b611227919061205c565b6101675461100d919061207e565b600082815260fb60205260409020600101546112508161125a565b6108ec8383611406565b6108c4813361174d565b60975460ff16156112aa5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161095d565b565b600261012d54036112ff5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161095d565b600261012d55565b6040516001600160a01b03808516602483015283166044820152606481018290526113729085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526117a6565b50505050565b600161012d55565b61138a8282611032565b61097057600082815260fb602090815260408083206001600160a01b03851684529091529020805460ff191660011790556113c23390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6114108282611032565b1561097057600082815260fb602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000805160206123198339815191526109708161125a565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156114b8576108ec83611878565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611512575060408051601f3d908101601f1916820190925261150f9181019061212e565b60015b6115755760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161095d565b6000805160206122d283398151915281146115e45760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161095d565b506108ec838383611914565b6040516001600160a01b0383166024820152604481018290526108ec90849063a9059cbb60e01b9060640161133b565b611628611939565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600054610100900460ff166112aa5760405162461bcd60e51b815260040161095d90612147565b600054610100900460ff166116c05760405162461bcd60e51b815260040161095d90612147565b6112aa611982565b600054610100900460ff166116ef5760405162461bcd60e51b815260040161095d90612147565b6112aa6119a9565b6000818311156117075781611709565b825b9392505050565b611718611264565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586116553390565b6117578282611032565b61097057611764816119dc565b61176f8360206119ee565b6040516020016117809291906121be565b60408051601f198184030181529082905262461bcd60e51b825261095d91600401612233565b60006117fb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611b8a9092919063ffffffff16565b8051909150156108ec57808060200190518101906118199190612266565b6108ec5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161095d565b6001600160a01b0381163b6118e55760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161095d565b6000805160206122d283398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61191d83611ba1565b60008251118061192a5750805b156108ec576113728383611be1565b60975460ff166112aa5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161095d565b600054610100900460ff166113785760405162461bcd60e51b815260040161095d90612147565b600054610100900460ff166119d05760405162461bcd60e51b815260040161095d90612147565b6097805460ff19169055565b606061071c6001600160a01b03831660145b606060006119fd83600261203d565b611a0890600261207e565b67ffffffffffffffff811115611a2057611a20611f38565b6040519080825280601f01601f191660200182016040528015611a4a576020820181803683370190505b509050600360fc1b81600081518110611a6557611a65612288565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611a9457611a94612288565b60200101906001600160f81b031916908160001a9053506000611ab884600261203d565b611ac390600161207e565b90505b6001811115611b3b576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611af757611af7612288565b1a60f81b828281518110611b0d57611b0d612288565b60200101906001600160f81b031916908160001a90535060049490941c93611b348161229e565b9050611ac6565b5083156117095760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161095d565b6060611b998484600085611cd5565b949350505050565b611baa81611878565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b611c495760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161095d565b600080846001600160a01b031684604051611c6491906122b5565b600060405180830381855af49150503d8060008114611c9f576040519150601f19603f3d011682016040523d82523d6000602084013e611ca4565b606091505b5091509150611ccc82826040518060600160405280602781526020016122f260279139611db0565b95945050505050565b606082471015611d365760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161095d565b600080866001600160a01b03168587604051611d5291906122b5565b60006040518083038185875af1925050503d8060008114611d8f576040519150601f19603f3d011682016040523d82523d6000602084013e611d94565b606091505b5091509150611da587838387611dc9565b979650505050505050565b60608315611dbf575081611709565b6117098383611e3e565b60608315611e38578251600003611e31576001600160a01b0385163b611e315760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161095d565b5081611b99565b611b9983835b815115611e4e5781518083602001fd5b8060405162461bcd60e51b815260040161095d9190612233565b80356001600160a01b0381168114611e7f57600080fd5b919050565b600060208284031215611e9657600080fd5b61170982611e68565b600060208284031215611eb157600080fd5b81356001600160e01b03198116811461170957600080fd5b600060208284031215611edb57600080fd5b5035919050565b60008060408385031215611ef557600080fd5b82359150611f0560208401611e68565b90509250929050565b60008060408385031215611f2157600080fd5b611f2a83611e68565b9150611f0560208401611e68565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215611f6157600080fd5b611f6a83611e68565b9150602083013567ffffffffffffffff80821115611f8757600080fd5b818501915085601f830112611f9b57600080fd5b813581811115611fad57611fad611f38565b604051601f8201601f19908116603f01168101908382118183101715611fd557611fd5611f38565b81604052828152886020848701011115611fee57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b634e487b7160e01b600052601160045260246000fd5b60008282101561203857612038612010565b500390565b600081600019048311821515161561205757612057612010565b500290565b60008261207957634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561209157612091612010565b500190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b60006020828403121561214057600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60005b838110156121ad578181015183820152602001612195565b838111156113725750506000910152565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516121f6816017850160208801612192565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351612227816028840160208801612192565b01602801949350505050565b6020815260008251806020840152612252816040850160208701612192565b601f01601f19169190910160400192915050565b60006020828403121561227857600080fd5b8151801515811461170957600080fd5b634e487b7160e01b600052603260045260246000fd5b6000816122ad576122ad612010565b506000190190565b600082516122c7818460208701612192565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775a264697066735822122008da2af76ab1fd1f4cf130b2d5ccad77e368bc54c7fac6a95b702b13ef09b10064736f6c634300080f0033";

type StakingContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakingContract__factory extends ContractFactory {
  constructor(...args: StakingContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StakingContract> {
    return super.deploy(overrides || {}) as Promise<StakingContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StakingContract {
    return super.attach(address) as StakingContract;
  }
  override connect(signer: Signer): StakingContract__factory {
    return super.connect(signer) as StakingContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingContractInterface {
    return new utils.Interface(_abi) as StakingContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingContract {
    return new Contract(address, _abi, signerOrProvider) as StakingContract;
  }
}
