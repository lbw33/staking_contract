/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  StakingContract,
  StakingContractInterface,
} from "../../contracts/StakingContract";

const _abi = [
  {
    inputs: [],
    name: "AmountCannotBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "NoRewardsToClaim",
    type: "error",
  },
  {
    inputs: [],
    name: "RewardAmountGreaterThanBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "RewardDurationNotFinished",
    type: "error",
  },
  {
    inputs: [],
    name: "RewardRateCannotBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "RewardTokenCannotBeZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "StakingTokenCannotBeZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StakeWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
    ],
    name: "changeRewardToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
    ],
    name: "changeStakingToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "finishAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTimeRewardApplicable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "notifyRewardAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerTokenStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "setRewardsDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updatedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userRewardPerTokenStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5060805161249661004c60003960008181610a0101528181610a4101528181610ea701528181610ee70152610f7601526124966000f3fe6080604052600436106102195760003560e01c80635c975abb116101235780638456cb59116100ab578063cc1a378f1161006f578063cc1a378f14610613578063cd3daf9d14610633578063d547741f14610648578063e9fad8ee14610668578063f7c618c11461067d57600080fd5b80638456cb591461059457806391d14854146105a9578063a217fddf146105c9578063a694fc3a146105de578063c7b8981c146105fe57600080fd5b80637519ab50116100f25780637519ab501461051957806375b238fc146105305780637b0a47ee1461055257806380faa57d14610569578063817b1cd21461057e57600080fd5b80635c975abb1461047a57806367d3b4881461049257806370a08231146104a957806372f702f3146104e057600080fd5b80632f2ff15d116101a65780633c6b16ab116101755780633c6b16ab146103fd5780633f4ba83a1461041d578063485cc955146104325780634f1ef2861461045257806352d1902d1461046557600080fd5b80632f2ff15d1461036f578063309ad2481461038f57806336568abe146103bd5780633659cfe6146103dd57600080fd5b80630fb5a6b4116101ed5780630fb5a6b4146102d1578063248a9ca3146102e85780632576dcad1461031857806325d5971f1461032f578063285d333b1461034f57600080fd5b80628cc2621461021e57806301ffc9a7146102515780630700037d14610281578063088ab8ce146102af575b600080fd5b34801561022a57600080fd5b5061023e610239366004611fac565b61069e565b6040519081526020015b60405180910390f35b34801561025d57600080fd5b5061027161026c366004611fc7565b61071e565b6040519015158152602001610248565b34801561028d57600080fd5b5061023e61029c366004611fac565b6101696020526000908152604090205481565b3480156102bb57600080fd5b506102cf6102ca366004611fac565b610753565b005b3480156102dd57600080fd5b5061023e6101625481565b3480156102f457600080fd5b5061023e610303366004611ff1565b600090815260fb602052604090206001015490565b34801561032457600080fd5b5061023e6101665481565b34801561033b57600080fd5b506102cf61034a366004611ff1565b6107b6565b34801561035b57600080fd5b506102cf61036a366004611fac565b6108e7565b34801561037b57600080fd5b506102cf61038a36600461200a565b61094a565b34801561039b57600080fd5b5061023e6103aa366004611fac565b6101686020526000908152604090205481565b3480156103c957600080fd5b506102cf6103d836600461200a565b610974565b3480156103e957600080fd5b506102cf6103f8366004611fac565b6109f7565b34801561040957600080fd5b506102cf610418366004611ff1565b610ad3565b34801561042957600080fd5b506102cf610cc0565b34801561043e57600080fd5b506102cf61044d366004612036565b610ce0565b6102cf610460366004612076565b610e9d565b34801561047157600080fd5b5061023e610f69565b34801561048657600080fd5b5060975460ff16610271565b34801561049e57600080fd5b5061023e6101635481565b3480156104b557600080fd5b5061023e6104c4366004611fac565b6001600160a01b03166000908152610167602052604090205490565b3480156104ec57600080fd5b5061015f54610501906001600160a01b031681565b6040516001600160a01b039091168152602001610248565b34801561052557600080fd5b5061023e6101645481565b34801561053c57600080fd5b5061023e60008051602061244183398151915281565b34801561055e57600080fd5b5061023e6101655481565b34801561057557600080fd5b5061023e61101c565b34801561058a57600080fd5b506101615461023e565b3480156105a057600080fd5b506102cf611030565b3480156105b557600080fd5b506102716105c436600461200a565b611050565b3480156105d557600080fd5b5061023e600081565b3480156105ea57600080fd5b506102cf6105f9366004611ff1565b61107b565b34801561060a57600080fd5b506102cf61119a565b34801561061f57600080fd5b506102cf61062e366004611ff1565b611291565b34801561063f57600080fd5b5061023e6112d4565b34801561065457600080fd5b506102cf61066336600461200a565b61133b565b34801561067457600080fd5b506102cf611360565b34801561068957600080fd5b5061016054610501906001600160a01b031681565b6001600160a01b03811660009081526101696020908152604080832054610168909252822054670de0b6b3a7640000906106d66112d4565b6106e0919061214e565b6001600160a01b038516600090815261016760205260409020546107049190612165565b61070e9190612184565b61071891906121a6565b92915050565b60006001600160e01b03198216637965db0b60e01b148061071857506301ffc9a760e01b6001600160e01b0319831614610718565b60008051602061244183398151915261076b81611384565b6001600160a01b0382166107925760405163560b6c5d60e11b815260040160405180910390fd5b5061016080546001600160a01b0319166001600160a01b0392909216919091179055565b6107be61138e565b6107c66113d4565b336107cf6112d4565b610166556107db61101c565b610164556001600160a01b03811615610826576107f78161069e565b6001600160a01b0382166000908152610169602090815260408083209390935561016654610168909152919020555b600082116108475760405163d11b25af60e01b815260040160405180910390fd5b33600090815261016760205260408120805484929061086790849061214e565b92505081905550816101616000828254610881919061214e565b909155505061015f5461089e906001600160a01b0316338461142f565b60408051338152602081018490527f8108595eb6bad3acefa9da467d90cc2217686d5c5ac85460f8b7849c840645fc91015b60405180910390a1506108e4600161012d55565b50565b6000805160206124418339815191526108ff81611384565b6001600160a01b038216610926576040516353ab834d60e11b815260040160405180910390fd5b5061015f80546001600160a01b0319166001600160a01b0392909216919091179055565b600082815260fb602052604090206001015461096581611384565b61096f838361149a565b505050565b6001600160a01b03811633146109e95760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6109f38282611520565b5050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610a3f5760405162461bcd60e51b81526004016109e0906121be565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610a886000805160206123fa833981519152546001600160a01b031690565b6001600160a01b031614610aae5760405162461bcd60e51b81526004016109e09061220a565b610ab781611587565b604080516000808252602082019092526108e49183919061159f565b600080516020612441833981519152610aeb81611384565b6000610af56112d4565b61016655610b0161101c565b610164556001600160a01b03811615610b4c57610b1d8161069e565b6001600160a01b0382166000908152610169602090815260408083209390935561016654610168909152919020555b61016354421115610b6e5761016254610b659084612184565b61016555610bae565b60004261016354610b7f919061214e565b61016554610b8d9190612165565b61016254909150610b9e85836121a6565b610ba89190612184565b61016555505b60006101655411610bd257604051637a69ed5160e11b815260040160405180910390fd5b610160546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610c1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3f9190612256565b6101625461016554610c519190612165565b1115610c70576040516388b88e1160e01b815260040160405180910390fd5b61016254610c7e90426121a6565b6101635542610164556040518381527fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d906020015b60405180910390a1505050565b600080516020612441833981519152610cd881611384565b6108e461170a565b600054610100900460ff1615808015610d005750600054600160ff909116105b80610d1a5750303b158015610d1a575060005460ff166001145b610d7d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016109e0565b6000805460ff191660011790558015610da0576000805461ff0019166101001790555b6001600160a01b038316610dc7576040516353ab834d60e11b815260040160405180910390fd5b6001600160a01b038216610dee5760405163560b6c5d60e11b815260040160405180910390fd5b610df661175c565b610dfe611783565b610e066117b2565b610e1160003361149a565b610e296000805160206124418339815191523361149a565b61015f80546001600160a01b038086166001600160a01b031992831617909255610160805492851692909116919091179055801561096f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602001610cb3565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610ee55760405162461bcd60e51b81526004016109e0906121be565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610f2e6000805160206123fa833981519152546001600160a01b031690565b6001600160a01b031614610f545760405162461bcd60e51b81526004016109e09061220a565b610f5d82611587565b6109f38282600161159f565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146110095760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016109e0565b506000805160206123fa83398151915290565b600061102b42610163546117e1565b905090565b60008051602061244183398151915261104881611384565b6108e46117fa565b600091825260fb602090815260408084206001600160a01b0393909316845291905290205460ff1690565b61108361138e565b61108b6113d4565b336110946112d4565b610166556110a061101c565b610164556001600160a01b038116156110eb576110bc8161069e565b6001600160a01b0382166000908152610169602090815260408083209390935561016654610168909152919020555b6000821161110c5760405163d11b25af60e01b815260040160405180910390fd5b61015f54611125906001600160a01b0316333085611837565b3360009081526101676020526040812080548492906111459084906121a6565b9250508190555081610161600082825461115f91906121a6565b909155505060408051338152602081018490527f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d91016108d0565b336111a36112d4565b610166556111af61101c565b610164556001600160a01b038116156111fa576111cb8161069e565b6001600160a01b0382166000908152610169602090815260408083209390935561016654610168909152919020555b336000908152610169602052604090205480611229576040516373380d9960e01b815260040160405180910390fd5b336000818152610169602052604081205561016054611254916001600160a01b03909116908361142f565b60408051338152602081018390527f8a43c4352486ec339f487f64af78ca5cbf06cd47833f073d3baf3a193e503161910160405180910390a15050565b6000805160206124418339815191526112a981611384565b426101635411156112cd5760405163715f384360e11b815260040160405180910390fd5b5061016255565b6000610161546000036112e957506101665490565b61016154610164546112f961101c565b611303919061214e565b610165546113119190612165565b61132390670de0b6b3a7640000612165565b61132d9190612184565b6101665461102b91906121a6565b600082815260fb602052604090206001015461135681611384565b61096f8383611520565b336000908152610167602052604090205461137a906107b6565b61138261119a565b565b6108e48133611875565b60975460ff16156113825760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016109e0565b600261012d54036114275760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016109e0565b600261012d55565b6040516001600160a01b03831660248201526044810182905261096f90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526118ce565b600161012d55565b6114a48282611050565b6109f357600082815260fb602090815260408083206001600160a01b03851684529091529020805460ff191660011790556114dc3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b61152a8282611050565b156109f357600082815260fb602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000805160206124418339815191526109f381611384565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156115d25761096f836119a0565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561162c575060408051601f3d908101601f1916820190925261162991810190612256565b60015b61168f5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016109e0565b6000805160206123fa83398151915281146116fe5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016109e0565b5061096f838383611a3c565b611712611a61565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600054610100900460ff166113825760405162461bcd60e51b81526004016109e09061226f565b600054610100900460ff166117aa5760405162461bcd60e51b81526004016109e09061226f565b611382611aaa565b600054610100900460ff166117d95760405162461bcd60e51b81526004016109e09061226f565b611382611ad1565b6000818311156117f157816117f3565b825b9392505050565b61180261138e565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861173f3390565b6040516001600160a01b038085166024830152831660448201526064810182905261186f9085906323b872dd60e01b9060840161145b565b50505050565b61187f8282611050565b6109f35761188c81611b04565b611897836020611b16565b6040516020016118a89291906122e6565b60408051601f198184030181529082905262461bcd60e51b82526109e09160040161235b565b6000611923826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611cb29092919063ffffffff16565b80519091501561096f5780806020019051810190611941919061238e565b61096f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016109e0565b6001600160a01b0381163b611a0d5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016109e0565b6000805160206123fa83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611a4583611cc9565b600082511180611a525750805b1561096f5761186f8383611d09565b60975460ff166113825760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016109e0565b600054610100900460ff166114925760405162461bcd60e51b81526004016109e09061226f565b600054610100900460ff16611af85760405162461bcd60e51b81526004016109e09061226f565b6097805460ff19169055565b60606107186001600160a01b03831660145b60606000611b25836002612165565b611b309060026121a6565b67ffffffffffffffff811115611b4857611b48612060565b6040519080825280601f01601f191660200182016040528015611b72576020820181803683370190505b509050600360fc1b81600081518110611b8d57611b8d6123b0565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611bbc57611bbc6123b0565b60200101906001600160f81b031916908160001a9053506000611be0846002612165565b611beb9060016121a6565b90505b6001811115611c63576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611c1f57611c1f6123b0565b1a60f81b828281518110611c3557611c356123b0565b60200101906001600160f81b031916908160001a90535060049490941c93611c5c816123c6565b9050611bee565b5083156117f35760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016109e0565b6060611cc18484600085611dfd565b949350505050565b611cd2816119a0565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b611d715760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016109e0565b600080846001600160a01b031684604051611d8c91906123dd565b600060405180830381855af49150503d8060008114611dc7576040519150601f19603f3d011682016040523d82523d6000602084013e611dcc565b606091505b5091509150611df4828260405180606001604052806027815260200161241a60279139611ed8565b95945050505050565b606082471015611e5e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016109e0565b600080866001600160a01b03168587604051611e7a91906123dd565b60006040518083038185875af1925050503d8060008114611eb7576040519150601f19603f3d011682016040523d82523d6000602084013e611ebc565b606091505b5091509150611ecd87838387611ef1565b979650505050505050565b60608315611ee75750816117f3565b6117f38383611f66565b60608315611f60578251600003611f59576001600160a01b0385163b611f595760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016109e0565b5081611cc1565b611cc183835b815115611f765781518083602001fd5b8060405162461bcd60e51b81526004016109e0919061235b565b80356001600160a01b0381168114611fa757600080fd5b919050565b600060208284031215611fbe57600080fd5b6117f382611f90565b600060208284031215611fd957600080fd5b81356001600160e01b0319811681146117f357600080fd5b60006020828403121561200357600080fd5b5035919050565b6000806040838503121561201d57600080fd5b8235915061202d60208401611f90565b90509250929050565b6000806040838503121561204957600080fd5b61205283611f90565b915061202d60208401611f90565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561208957600080fd5b61209283611f90565b9150602083013567ffffffffffffffff808211156120af57600080fd5b818501915085601f8301126120c357600080fd5b8135818111156120d5576120d5612060565b604051601f8201601f19908116603f011681019083821181831017156120fd576120fd612060565b8160405282815288602084870101111561211657600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b634e487b7160e01b600052601160045260246000fd5b60008282101561216057612160612138565b500390565b600081600019048311821515161561217f5761217f612138565b500290565b6000826121a157634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156121b9576121b9612138565b500190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b60006020828403121561226857600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60005b838110156122d55781810151838201526020016122bd565b8381111561186f5750506000910152565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161231e8160178501602088016122ba565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161234f8160288401602088016122ba565b01602801949350505050565b602081526000825180602084015261237a8160408501602087016122ba565b601f01601f19169190910160400192915050565b6000602082840312156123a057600080fd5b815180151581146117f357600080fd5b634e487b7160e01b600052603260045260246000fd5b6000816123d5576123d5612138565b506000190190565b600082516123ef8184602087016122ba565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775a2646970667358221220a3e107b912b06c27adf52897cb641992cd0f64587881f024315f1f29944be92064736f6c634300080f0033";

type StakingContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakingContract__factory extends ContractFactory {
  constructor(...args: StakingContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StakingContract> {
    return super.deploy(overrides || {}) as Promise<StakingContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StakingContract {
    return super.attach(address) as StakingContract;
  }
  override connect(signer: Signer): StakingContract__factory {
    return super.connect(signer) as StakingContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingContractInterface {
    return new utils.Interface(_abi) as StakingContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingContract {
    return new Contract(address, _abi, signerOrProvider) as StakingContract;
  }
}
