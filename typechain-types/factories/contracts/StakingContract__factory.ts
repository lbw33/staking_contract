/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  StakingContract,
  StakingContractInterface,
} from "../../contracts/StakingContract";

const _abi = [
  {
    inputs: [],
    name: "AmountCannotBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "RewardAmountGreaterThanBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "RewardDurationNotFinished",
    type: "error",
  },
  {
    inputs: [],
    name: "RewardRateCannotBeZero",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
    ],
    name: "changeRewardToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
    ],
    name: "changeStakingToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finishAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTimeRewardApplicable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "notifyRewardAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "setRewardsDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updatedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userRewardPerTokenPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5060805161234261004c600039600081816109520152818161099201528181610e5d01528181610e9d0152610f2c01526123426000f3fe60806040526004361061020e5760003560e01c806367d3b488116101185780638b876347116100a0578063cc1a378f1161006f578063cc1a378f146105e9578063cd3daf9d14610609578063d547741f1461061e578063df136d651461063e578063f7c618c11461065557600080fd5b80638b8763471461056657806391d1485414610594578063a217fddf146105b4578063a694fc3a146105c957600080fd5b806375b238fc116100e757806375b238fc146104ec5780637b0a47ee1461050e57806380faa57d14610525578063817b1cd21461053a5780638456cb591461055157600080fd5b806367d3b4881461045757806370a082311461046e57806372f702f31461049c5780637519ab50146104d557600080fd5b806336568abe1161019b5780633f4ba83a1161016a5780633f4ba83a146103e2578063485cc955146103f75780634f1ef2861461041757806352d1902d1461042a5780635c975abb1461043f57600080fd5b806336568abe1461036d5780633659cfe61461038d5780633c6b16ab146103ad5780633d18b912146103cd57600080fd5b80630fb5a6b4116101e25780630fb5a6b4146102c6578063248a9ca3146102dd578063285d333b1461030d5780632e1a7d4d1461032d5780632f2ff15d1461034d57600080fd5b80628cc2621461021357806301ffc9a7146102465780630700037d14610276578063088ab8ce146102a4575b600080fd5b34801561021f57600080fd5b5061023361022e366004611e58565b610676565b6040519081526020015b60405180910390f35b34801561025257600080fd5b50610266610261366004611e73565b6106f6565b604051901515815260200161023d565b34801561028257600080fd5b50610233610291366004611e58565b6101696020526000908152604090205481565b3480156102b057600080fd5b506102c46102bf366004611e58565b61072b565b005b3480156102d257600080fd5b506102336101625481565b3480156102e957600080fd5b506102336102f8366004611e9d565b600090815260fb602052604090206001015490565b34801561031957600080fd5b506102c4610328366004611e58565b610767565b34801561033957600080fd5b506102c4610348366004611e9d565b6107a3565b34801561035957600080fd5b506102c4610368366004611eb6565b61089b565b34801561037957600080fd5b506102c4610388366004611eb6565b6108c5565b34801561039957600080fd5b506102c46103a8366004611e58565b610948565b3480156103b957600080fd5b506102c46103c8366004611e9d565b610a24565b3480156103d957600080fd5b506102c4610bdd565b3480156103ee57600080fd5b506102c4610cbc565b34801561040357600080fd5b506102c4610412366004611ee2565b610cdc565b6102c4610425366004611f22565b610e53565b34801561043657600080fd5b50610233610f1f565b34801561044b57600080fd5b5060975460ff16610266565b34801561046357600080fd5b506102336101635481565b34801561047a57600080fd5b50610233610489366004611e58565b6101676020526000908152604090205481565b3480156104a857600080fd5b5061015f546104bd906001600160a01b031681565b6040516001600160a01b03909116815260200161023d565b3480156104e157600080fd5b506102336101645481565b3480156104f857600080fd5b506102336000805160206122ed83398151915281565b34801561051a57600080fd5b506102336101655481565b34801561053157600080fd5b50610233610fd2565b34801561054657600080fd5b506102336101615481565b34801561055d57600080fd5b506102c4610fe6565b34801561057257600080fd5b50610233610581366004611e58565b6101686020526000908152604090205481565b3480156105a057600080fd5b506102666105af366004611eb6565b611006565b3480156105c057600080fd5b50610233600081565b3480156105d557600080fd5b506102c46105e4366004611e9d565b611031565b3480156105f557600080fd5b506102c4610604366004611e9d565b61115f565b34801561061557600080fd5b506102336111a2565b34801561062a57600080fd5b506102c4610639366004611eb6565b611209565b34801561064a57600080fd5b506102336101665481565b34801561066157600080fd5b50610160546104bd906001600160a01b031681565b6001600160a01b03811660009081526101696020908152604080832054610168909252822054670de0b6b3a7640000906106ae6111a2565b6106b89190611ffa565b6001600160a01b038516600090815261016760205260409020546106dc9190612011565b6106e69190612030565b6106f09190612052565b92915050565b60006001600160e01b03198216637965db0b60e01b14806106f057506301ffc9a760e01b6001600160e01b03198316146106f0565b6000805160206122ed8339815191526107438161122e565b5061016080546001600160a01b0319166001600160a01b0392909216919091179055565b6000805160206122ed83398151915261077f8161122e565b5061015f80546001600160a01b0319166001600160a01b0392909216919091179055565b6107ab611238565b6107b3611280565b336107bc6111a2565b610166556107c8610fd2565b610164556001600160a01b03811615610813576107e481610676565b6001600160a01b0382166000908152610169602090815260408083209390935561016654610168909152919020555b600082116108345760405163d11b25af60e01b815260040160405180910390fd5b336000908152610167602052604081208054849290610854908490611ffa565b9250508190555081610161600082825461086e9190611ffa565b90915550506101605461088c906001600160a01b03163033856112db565b50610898600161012d55565b50565b600082815260fb60205260409020600101546108b68161122e565b6108c08383611354565b505050565b6001600160a01b038116331461093a5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61094482826113da565b5050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036109905760405162461bcd60e51b81526004016109319061206a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166109d96000805160206122a6833981519152546001600160a01b031690565b6001600160a01b0316146109ff5760405162461bcd60e51b8152600401610931906120b6565b610a0881611441565b6040805160008082526020820190925261089891839190611459565b6000805160206122ed833981519152610a3c8161122e565b6000610a466111a2565b61016655610a52610fd2565b610164556001600160a01b03811615610a9d57610a6e81610676565b6001600160a01b0382166000908152610169602090815260408083209390935561016654610168909152919020555b61016354421115610abf5761016254610ab69084612030565b61016555610aff565b60004261016354610ad09190611ffa565b61016554610ade9190612011565b61016254909150610aef8583612052565b610af99190612030565b61016555505b60006101655411610b2357604051637a69ed5160e11b815260040160405180910390fd5b610160546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610b6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b909190612102565b6101625461016554610ba29190612011565b1115610bc1576040516388b88e1160e01b815260040160405180910390fd5b61016254610bcf9042612052565b610163555050426101645550565b33610be66111a2565b61016655610bf2610fd2565b610164556001600160a01b03811615610c3d57610c0e81610676565b6001600160a01b0382166000908152610169602090815260408083209390935561016654610168909152919020555b33600090815261016960205260409020548015610c7f57336000818152610169602052604081205561016054610c7f916001600160a01b0390911690836115c4565b60408051338152602081018390527f8a43c4352486ec339f487f64af78ca5cbf06cd47833f073d3baf3a193e503161910160405180910390a15050565b6000805160206122ed833981519152610cd48161122e565b6108986115f4565b600054610100900460ff1615808015610cfc5750600054600160ff909116105b80610d165750303b158015610d16575060005460ff166001145b610d795760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610931565b6000805460ff191660011790558015610d9c576000805461ff0019166101001790555b610da4611646565b610dac61166d565b610db461169c565b610dbf600033611354565b610dd76000805160206122ed83398151915233611354565b61015f80546001600160a01b038086166001600160a01b03199283161790925561016080549285169290911691909117905580156108c0576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610e9b5760405162461bcd60e51b81526004016109319061206a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610ee46000805160206122a6833981519152546001600160a01b031690565b6001600160a01b031614610f0a5760405162461bcd60e51b8152600401610931906120b6565b610f1382611441565b61094482826001611459565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610fbf5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610931565b506000805160206122a683398151915290565b6000610fe142610163546116cb565b905090565b6000805160206122ed833981519152610ffe8161122e565b6108986116e4565b600091825260fb602090815260408084206001600160a01b0393909316845291905290205460ff1690565b611039611238565b611041611280565b3361104a6111a2565b61016655611056610fd2565b610164556001600160a01b038116156110a15761107281610676565b6001600160a01b0382166000908152610169602090815260408083209390935561016654610168909152919020555b600082116110c25760405163d11b25af60e01b815260040160405180910390fd5b61015f546110db906001600160a01b03163330856112db565b3360009081526101676020526040812080548492906110fb908490612052565b925050819055508161016160008282546111159190612052565b909155505060408051338152602081018490527f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d910160405180910390a150610898600161012d55565b6000805160206122ed8339815191526111778161122e565b4261016354111561119b5760405163715f384360e11b815260040160405180910390fd5b5061016255565b6000610161546000036111b757506101665490565b61016154610164546111c7610fd2565b6111d19190611ffa565b610165546111df9190612011565b6111f190670de0b6b3a7640000612011565b6111fb9190612030565b61016654610fe19190612052565b600082815260fb60205260409020600101546112248161122e565b6108c083836113da565b6108988133611721565b60975460ff161561127e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610931565b565b600261012d54036112d35760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610931565b600261012d55565b6040516001600160a01b03808516602483015283166044820152606481018290526113469085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261177a565b50505050565b600161012d55565b61135e8282611006565b61094457600082815260fb602090815260408083206001600160a01b03851684529091529020805460ff191660011790556113963390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6113e48282611006565b1561094457600082815260fb602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000805160206122ed8339815191526109448161122e565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561148c576108c08361184c565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156114e6575060408051601f3d908101601f191682019092526114e391810190612102565b60015b6115495760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610931565b6000805160206122a683398151915281146115b85760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610931565b506108c08383836118e8565b6040516001600160a01b0383166024820152604481018290526108c090849063a9059cbb60e01b9060640161130f565b6115fc61190d565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600054610100900460ff1661127e5760405162461bcd60e51b81526004016109319061211b565b600054610100900460ff166116945760405162461bcd60e51b81526004016109319061211b565b61127e611956565b600054610100900460ff166116c35760405162461bcd60e51b81526004016109319061211b565b61127e61197d565b6000818311156116db57816116dd565b825b9392505050565b6116ec611238565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586116293390565b61172b8282611006565b61094457611738816119b0565b6117438360206119c2565b604051602001611754929190612192565b60408051601f198184030181529082905262461bcd60e51b825261093191600401612207565b60006117cf826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611b5e9092919063ffffffff16565b8051909150156108c057808060200190518101906117ed919061223a565b6108c05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610931565b6001600160a01b0381163b6118b95760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610931565b6000805160206122a683398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6118f183611b75565b6000825111806118fe5750805b156108c0576113468383611bb5565b60975460ff1661127e5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610931565b600054610100900460ff1661134c5760405162461bcd60e51b81526004016109319061211b565b600054610100900460ff166119a45760405162461bcd60e51b81526004016109319061211b565b6097805460ff19169055565b60606106f06001600160a01b03831660145b606060006119d1836002612011565b6119dc906002612052565b67ffffffffffffffff8111156119f4576119f4611f0c565b6040519080825280601f01601f191660200182016040528015611a1e576020820181803683370190505b509050600360fc1b81600081518110611a3957611a3961225c565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611a6857611a6861225c565b60200101906001600160f81b031916908160001a9053506000611a8c846002612011565b611a97906001612052565b90505b6001811115611b0f576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611acb57611acb61225c565b1a60f81b828281518110611ae157611ae161225c565b60200101906001600160f81b031916908160001a90535060049490941c93611b0881612272565b9050611a9a565b5083156116dd5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610931565b6060611b6d8484600085611ca9565b949350505050565b611b7e8161184c565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b611c1d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610931565b600080846001600160a01b031684604051611c389190612289565b600060405180830381855af49150503d8060008114611c73576040519150601f19603f3d011682016040523d82523d6000602084013e611c78565b606091505b5091509150611ca082826040518060600160405280602781526020016122c660279139611d84565b95945050505050565b606082471015611d0a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610931565b600080866001600160a01b03168587604051611d269190612289565b60006040518083038185875af1925050503d8060008114611d63576040519150601f19603f3d011682016040523d82523d6000602084013e611d68565b606091505b5091509150611d7987838387611d9d565b979650505050505050565b60608315611d935750816116dd565b6116dd8383611e12565b60608315611e0c578251600003611e05576001600160a01b0385163b611e055760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610931565b5081611b6d565b611b6d83835b815115611e225781518083602001fd5b8060405162461bcd60e51b81526004016109319190612207565b80356001600160a01b0381168114611e5357600080fd5b919050565b600060208284031215611e6a57600080fd5b6116dd82611e3c565b600060208284031215611e8557600080fd5b81356001600160e01b0319811681146116dd57600080fd5b600060208284031215611eaf57600080fd5b5035919050565b60008060408385031215611ec957600080fd5b82359150611ed960208401611e3c565b90509250929050565b60008060408385031215611ef557600080fd5b611efe83611e3c565b9150611ed960208401611e3c565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215611f3557600080fd5b611f3e83611e3c565b9150602083013567ffffffffffffffff80821115611f5b57600080fd5b818501915085601f830112611f6f57600080fd5b813581811115611f8157611f81611f0c565b604051601f8201601f19908116603f01168101908382118183101715611fa957611fa9611f0c565b81604052828152886020848701011115611fc257600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b634e487b7160e01b600052601160045260246000fd5b60008282101561200c5761200c611fe4565b500390565b600081600019048311821515161561202b5761202b611fe4565b500290565b60008261204d57634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561206557612065611fe4565b500190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b60006020828403121561211457600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60005b83811015612181578181015183820152602001612169565b838111156113465750506000910152565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516121ca816017850160208801612166565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516121fb816028840160208801612166565b01602801949350505050565b6020815260008251806020840152612226816040850160208701612166565b601f01601f19169190910160400192915050565b60006020828403121561224c57600080fd5b815180151581146116dd57600080fd5b634e487b7160e01b600052603260045260246000fd5b60008161228157612281611fe4565b506000190190565b6000825161229b818460208701612166565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775a2646970667358221220d69b4db13754736f4a11dc7891482dcc488801ee5a0e43278477d5381f12a38564736f6c634300080f0033";

type StakingContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakingContract__factory extends ContractFactory {
  constructor(...args: StakingContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StakingContract> {
    return super.deploy(overrides || {}) as Promise<StakingContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StakingContract {
    return super.attach(address) as StakingContract;
  }
  override connect(signer: Signer): StakingContract__factory {
    return super.connect(signer) as StakingContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingContractInterface {
    return new utils.Interface(_abi) as StakingContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingContract {
    return new Contract(address, _abi, signerOrProvider) as StakingContract;
  }
}
